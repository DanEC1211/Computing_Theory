<!DOCTYPE html>
<html>
<head>
  <title>Universo de Cadenas Binarias</title>
</head>
<body>
  <form id="form">
    <label for="n">Introduce el valor de n (0-1000):</label>
    <input type="number" id="n" name="n" min="0" max="1000">
    <button type="button" id="auto">Ejecutar Automático</button>
    <button type="button" id="manual">Ejecutar Manual</button>
  </form>
  <button type="button" id="prev">Prev</button>
  <span id="batchIndicator">0 de 0</span>
  <button type="button" id="next">Next</button>
  <canvas id="chart"></canvas>
  <a id="download" href="/download">Descargar archivo de texto</a>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    let chart; // Variable para almacenar el gráfico
    const autoButton = document.getElementById('auto');
    const manualButton = document.getElementById('manual');
    const prevButton = document.getElementById('prev');
    const nextButton = document.getElementById('next');
    const nInput = document.getElementById('n');
    const batchIndicator = document.getElementById('batchIndicator');
    let currentBatch = 0; // Lote actual
    let totalBatches = 0; // Total de lotes

    autoButton.addEventListener('click', function() {
      const n = Math.floor(Math.random() * 11); // Genera un número aleatorio entre 0 y 1000
      currentBatch = 0;
      calculate(n, currentBatch);
    });

    manualButton.addEventListener('click', function() {
      const n = nInput.value;
      currentBatch = 0;
      calculate(n, currentBatch);
    });

    prevButton.addEventListener('click', function() {
      if (currentBatch > 0) {
        currentBatch--;
        calculate(nInput.value, currentBatch);
      }
    });

    nextButton.addEventListener('click', function() {
      if (currentBatch < totalBatches - 1) {
        currentBatch++;
        calculate(nInput.value, currentBatch);
      }
    });

    function calculate(n, batch) {
      fetch(`/calc?n=${n}&batch=${batch}`, {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify({ n: n }),
      })
      .then(response => response.json())
      .then(data => {
          const binaryStrings = data.binaryStrings; // Usa las cadenas binarias del lote actual
          totalBatches = data.totalBatches; // Actualiza el total de lotes
          batchIndicator.textContent = `${currentBatch + 1} de ${totalBatches}`; // Actualiza el indicador de lote
          updateChart({ binaryStrings, counts: data.counts });
      })
      .catch(error => {
          console.error('Error:', error);
      });
  }

  function updateChart(data) {
    const ctx = document.getElementById('chart').getContext('2d');
    if (chart) {
        chart.destroy(); // Destruye el gráfico anterior si existe
    }
    // Limita las cadenas binarias a los primeros 8 dígitos
    const binaryStrings = data.binaryStrings.map(str => str.slice(0, 8));
    chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: binaryStrings,
            datasets: [{
                label: 'Número de unos',
                data: data.counts,
                backgroundColor: 'rgba(128, 0, 128, 0.2)', // Color de fondo morado
                borderColor: 'rgba(128, 0, 128, 1)', // Color de borde morado
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

// Llama a la función calculate con el valor inicial de n y el lote 0
calculate(nInput.value, 0);

  </script>
</body>
</html>